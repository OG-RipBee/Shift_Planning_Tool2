{"ast":null,"code":"import{useState,useEffect}from\"react\";import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";function ShiftPlanner(){const[shifts,setShifts]=useState([]);const[newShift,setNewShift]=useState({employee:\"\",shift:\"\",hours:\"\",extra:\"\"});const[error,setError]=useState(null);useEffect(()=>{// Fetch shifts from backend or Excel\n},[]);const handleInputChange=e=>{setNewShift({...newShift,[e.target.name]:e.target.value});};const addShift=()=>{if(!newShift.employee||!newShift.shift||!newShift.hours){setError(\"All fields must be filled\");return;}setShifts([...shifts,newShift]);setNewShift({employee:\"\",shift:\"\",hours:\"\",extra:\"\"});setError(null);};return/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"h1\",{children:\"Shift Planner\"}),error&&/*#__PURE__*/_jsx(\"p\",{style:{color:\"red\"},children:error}),/*#__PURE__*/_jsx(\"input\",{name:\"employee\",placeholder:\"Employee Name\",value:newShift.employee,onChange:handleInputChange}),/*#__PURE__*/_jsx(\"input\",{name:\"shift\",placeholder:\"Shift\",value:newShift.shift,onChange:handleInputChange}),/*#__PURE__*/_jsx(\"input\",{name:\"hours\",placeholder:\"Hours\",type:\"number\",value:newShift.hours,onChange:handleInputChange}),/*#__PURE__*/_jsx(\"input\",{name:\"extra\",placeholder:\"Extra Hours\",type:\"number\",value:newShift.extra,onChange:handleInputChange}),/*#__PURE__*/_jsx(\"button\",{onClick:addShift,children:\"Add Shift\"})]});}export default ShiftPlanner;","map":{"version":3,"names":["useState","useEffect","jsx","_jsx","jsxs","_jsxs","ShiftPlanner","shifts","setShifts","newShift","setNewShift","employee","shift","hours","extra","error","setError","handleInputChange","e","target","name","value","addShift","children","style","color","placeholder","onChange","type","onClick"],"sources":["C:/Users/grant/shift_planning_tool2/frontend/src/App.js"],"sourcesContent":["import { useState, useEffect } from \"react\";\r\n\r\nfunction ShiftPlanner() {\r\n  const [shifts, setShifts] = useState([]);\r\n  const [newShift, setNewShift] = useState({ employee: \"\", shift: \"\", hours: \"\", extra: \"\" });\r\n  const [error, setError] = useState(null);\r\n\r\n  useEffect(() => {\r\n    // Fetch shifts from backend or Excel\r\n  }, []);\r\n\r\n  const handleInputChange = (e) => {\r\n    setNewShift({ ...newShift, [e.target.name]: e.target.value });\r\n  };\r\n\r\n  const addShift = () => {\r\n    if (!newShift.employee || !newShift.shift || !newShift.hours) {\r\n      setError(\"All fields must be filled\");\r\n      return;\r\n    }\r\n    setShifts([...shifts, newShift]);\r\n    setNewShift({ employee: \"\", shift: \"\", hours: \"\", extra: \"\" });\r\n    setError(null);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h1>Shift Planner</h1>\r\n      {error && <p style={{ color: \"red\" }}>{error}</p>}\r\n      <input name=\"employee\" placeholder=\"Employee Name\" value={newShift.employee} onChange={handleInputChange} />\r\n      <input name=\"shift\" placeholder=\"Shift\" value={newShift.shift} onChange={handleInputChange} />\r\n      <input name=\"hours\" placeholder=\"Hours\" type=\"number\" value={newShift.hours} onChange={handleInputChange} />\r\n      <input name=\"extra\" placeholder=\"Extra Hours\" type=\"number\" value={newShift.extra} onChange={handleInputChange} />\r\n      <button onClick={addShift}>Add Shift</button>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ShiftPlanner;\r\n"],"mappings":"AAAA,OAASA,QAAQ,CAAEC,SAAS,KAAQ,OAAO,CAAC,OAAAC,GAAA,IAAAC,IAAA,CAAAC,IAAA,IAAAC,KAAA,yBAE5C,QAAS,CAAAC,YAAYA,CAAA,CAAG,CACtB,KAAM,CAACC,MAAM,CAAEC,SAAS,CAAC,CAAGR,QAAQ,CAAC,EAAE,CAAC,CACxC,KAAM,CAACS,QAAQ,CAAEC,WAAW,CAAC,CAAGV,QAAQ,CAAC,CAAEW,QAAQ,CAAE,EAAE,CAAEC,KAAK,CAAE,EAAE,CAAEC,KAAK,CAAE,EAAE,CAAEC,KAAK,CAAE,EAAG,CAAC,CAAC,CAC3F,KAAM,CAACC,KAAK,CAAEC,QAAQ,CAAC,CAAGhB,QAAQ,CAAC,IAAI,CAAC,CAExCC,SAAS,CAAC,IAAM,CACd;AAAA,CACD,CAAE,EAAE,CAAC,CAEN,KAAM,CAAAgB,iBAAiB,CAAIC,CAAC,EAAK,CAC/BR,WAAW,CAAC,CAAE,GAAGD,QAAQ,CAAE,CAACS,CAAC,CAACC,MAAM,CAACC,IAAI,EAAGF,CAAC,CAACC,MAAM,CAACE,KAAM,CAAC,CAAC,CAC/D,CAAC,CAED,KAAM,CAAAC,QAAQ,CAAGA,CAAA,GAAM,CACrB,GAAI,CAACb,QAAQ,CAACE,QAAQ,EAAI,CAACF,QAAQ,CAACG,KAAK,EAAI,CAACH,QAAQ,CAACI,KAAK,CAAE,CAC5DG,QAAQ,CAAC,2BAA2B,CAAC,CACrC,OACF,CACAR,SAAS,CAAC,CAAC,GAAGD,MAAM,CAAEE,QAAQ,CAAC,CAAC,CAChCC,WAAW,CAAC,CAAEC,QAAQ,CAAE,EAAE,CAAEC,KAAK,CAAE,EAAE,CAAEC,KAAK,CAAE,EAAE,CAAEC,KAAK,CAAE,EAAG,CAAC,CAAC,CAC9DE,QAAQ,CAAC,IAAI,CAAC,CAChB,CAAC,CAED,mBACEX,KAAA,QAAAkB,QAAA,eACEpB,IAAA,OAAAoB,QAAA,CAAI,eAAa,CAAI,CAAC,CACrBR,KAAK,eAAIZ,IAAA,MAAGqB,KAAK,CAAE,CAAEC,KAAK,CAAE,KAAM,CAAE,CAAAF,QAAA,CAAER,KAAK,CAAI,CAAC,cACjDZ,IAAA,UAAOiB,IAAI,CAAC,UAAU,CAACM,WAAW,CAAC,eAAe,CAACL,KAAK,CAAEZ,QAAQ,CAACE,QAAS,CAACgB,QAAQ,CAAEV,iBAAkB,CAAE,CAAC,cAC5Gd,IAAA,UAAOiB,IAAI,CAAC,OAAO,CAACM,WAAW,CAAC,OAAO,CAACL,KAAK,CAAEZ,QAAQ,CAACG,KAAM,CAACe,QAAQ,CAAEV,iBAAkB,CAAE,CAAC,cAC9Fd,IAAA,UAAOiB,IAAI,CAAC,OAAO,CAACM,WAAW,CAAC,OAAO,CAACE,IAAI,CAAC,QAAQ,CAACP,KAAK,CAAEZ,QAAQ,CAACI,KAAM,CAACc,QAAQ,CAAEV,iBAAkB,CAAE,CAAC,cAC5Gd,IAAA,UAAOiB,IAAI,CAAC,OAAO,CAACM,WAAW,CAAC,aAAa,CAACE,IAAI,CAAC,QAAQ,CAACP,KAAK,CAAEZ,QAAQ,CAACK,KAAM,CAACa,QAAQ,CAAEV,iBAAkB,CAAE,CAAC,cAClHd,IAAA,WAAQ0B,OAAO,CAAEP,QAAS,CAAAC,QAAA,CAAC,WAAS,CAAQ,CAAC,EAC1C,CAAC,CAEV,CAEA,cAAe,CAAAjB,YAAY","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}